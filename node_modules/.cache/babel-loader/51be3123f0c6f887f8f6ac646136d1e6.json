{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sam/Desktop/psite/src/pages/Test.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, Typography, Button, IconButton } from '@material-ui/core';\nimport { useMeasure } from 'react-use';\nimport { useSpring, animated } from 'react-spring';\nimport DoubleChevronIcon from \"../icons/DoubleChevrons.svg\";\n\nfunction Test() {\n  _s();\n\n  const defaultHeight = '250';\n  const [open, toggle] = useState(false);\n  const [contentHeight, setContentHeight] = useState(defaultHeight);\n  const [ref, {\n    height\n  }] = useMeasure();\n  useEffect(() => {\n    //Sets initial height\n    setContentHeight(height); //Adds resize event listener\n\n    window.addEventListener(\"resize\", setContentHeight(height)); // Clean-up\n\n    return window.removeEventListener(\"resize\", setContentHeight(height));\n  }, [height]); // Animations\n\n  const expand = useSpring({\n    config: {\n      friction: 10\n    },\n    overflow: 'hidden',\n    marginTop: 50,\n    border: \"3px dotted black\",\n    height: open ? `${contentHeight}px` : defaultHeight\n  });\n  const spin = useSpring({\n    config: {\n      friction: 10\n    },\n    transform: open ? \"rotate(180deg)\" : \"rotate(0deg)\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(animated.div, {\n      ref: ref,\n      style: expand,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {},\n        children: [\"Hello\", /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Is it me you're looking for?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(animated.button, {\n      onClick: () => toggle(!open),\n      children: /*#__PURE__*/_jsxDEV(animated.img, {\n        style: spin,\n        src: DoubleChevronIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Test, \"1nAHa8BryPIl3gWsQqj5MMMObaA=\", false, function () {\n  return [useMeasure, useSpring, useSpring];\n});\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/Users/sam/Desktop/psite/src/pages/Test.js"],"names":["React","useState","useEffect","Card","Typography","Button","IconButton","useMeasure","useSpring","animated","Test","defaultHeight","open","toggle","contentHeight","setContentHeight","ref","height","window","addEventListener","removeEventListener","expand","config","friction","overflow","marginTop","border","spin","transform","DoubleChevronIcon"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,MAA3B,EAAmCC,UAAnC,QAAqD,mBAArD;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;;;AAIA,SAASC,IAAT,GAAe;AAAA;;AAEb,QAAMC,aAAa,GAAG,KAAtB;AACA,QAAM,CAACC,IAAD,EAAOC,MAAP,IAAiBZ,QAAQ,CAAC,KAAD,CAA/B;AACA,QAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAACU,aAAD,CAAlD;AACA,QAAM,CAACK,GAAD,EAAM;AAAEC,IAAAA;AAAF,GAAN,IAAoBV,UAAU,EAApC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd;AACAa,IAAAA,gBAAgB,CAACE,MAAD,CAAhB,CAFc,CAId;;AACAC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCJ,gBAAgB,CAACE,MAAD,CAAlD,EALc,CAOd;;AACA,WAAOC,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCL,gBAAgB,CAACE,MAAD,CAArD,CAAP;AACD,GATQ,EASN,CAACA,MAAD,CATM,CAAT,CAPa,CAmBb;;AACA,QAAMI,MAAM,GAAGb,SAAS,CAAC;AACvBc,IAAAA,MAAM,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KADe;AAEvBC,IAAAA,QAAQ,EAAE,QAFa;AAGvBC,IAAAA,SAAS,EAAE,EAHY;AAIvBC,IAAAA,MAAM,EAAE,kBAJe;AAKvBT,IAAAA,MAAM,EAAEL,IAAI,GAAI,GAAEE,aAAc,IAApB,GAA0BH;AALf,GAAD,CAAxB;AAOA,QAAMgB,IAAI,GAAGnB,SAAS,CAAC;AACrBc,IAAAA,MAAM,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KADa;AAErBK,IAAAA,SAAS,EAAEhB,IAAI,GAAG,gBAAH,GAAsB;AAFhB,GAAD,CAAtB;AAKA,sBACE;AAAA,4BACE,QAAC,QAAD,CAAU,GAAV;AAAc,MAAA,GAAG,EAAEI,GAAnB;AAAwB,MAAA,KAAK,EAAEK,MAA/B;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAE,EAAb;AAAA,yCAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,QAAD,CAAU,MAAV;AACA,MAAA,OAAO,EAAE,MAAMR,MAAM,CAAC,CAACD,IAAF,CADrB;AAAA,6BAEE,QAAC,QAAD,CAAU,GAAV;AACA,QAAA,KAAK,EAAEe,IADP;AAEA,QAAA,GAAG,EAAEE;AAFL;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAlDQnB,I;UAKmBH,U,EAeXC,S,EAOFA,S;;;KA3BNE,I;AAoDT,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, Typography, Button, IconButton } from '@material-ui/core';\nimport { useMeasure } from 'react-use';\nimport { useSpring, animated } from 'react-spring';\nimport DoubleChevronIcon from '../icons/DoubleChevrons.svg';\n\n\nfunction Test(){\n\n  const defaultHeight = '250';\n  const [open, toggle] = useState(false);\n  const [contentHeight, setContentHeight] = useState(defaultHeight);\n  const [ref, { height }] = useMeasure();\n\n  useEffect(() => {\n    //Sets initial height\n    setContentHeight(height);\n  \n    //Adds resize event listener\n    window.addEventListener(\"resize\", setContentHeight(height));\n  \n    // Clean-up\n    return window.removeEventListener(\"resize\", setContentHeight(height));\n  }, [height]);\n\n\n  // Animations\n  const expand = useSpring({\n    config: { friction: 10 },\n    overflow: 'hidden',\n    marginTop: 50,\n    border: \"3px dotted black\",\n    height: open ? `${contentHeight}px` : defaultHeight\n  });\n  const spin = useSpring({\n    config: { friction: 10 },\n    transform: open ? \"rotate(180deg)\" : \"rotate(0deg)\"\n  });\n\n  return(\n    <div>\n      <animated.div ref={ref} style={expand}>\n        <Card style={{}}>\n          Hello\n          <div>\n            Is it me you're looking for?\n          </div>\n        </Card>\n      </animated.div>\n      <animated.button\n      onClick={() => toggle(!open)}>\n        <animated.img \n        style={spin}\n        src={DoubleChevronIcon}/>\n      </animated.button>\n    </div>\n  )\n}\n\nexport default Test;"]},"metadata":{},"sourceType":"module"}