{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sam/Desktop/psite/src/components/Project.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { animated, useSpring } from 'react-spring';\nvar cardWidth = 250;\nvar cardHeight = 250;\nconst useStyles = makeStyles(theme => ({\n  card: {\n    marginLeft: sideMargins,\n    marginRight: sideMargins,\n    display: 'inline-block'\n  },\n  icon: {\n    marginTop: 15,\n    height: 200,\n    width: 200\n  },\n  title: {\n    display: 'inline-block',\n    width: 250,\n    fontSize: 24,\n    textAlign: 'center',\n    marginTop: 5,\n    fontFamily: 'Montserrat',\n    fontWeight: 800,\n    color: '#242331 !important'\n  }\n}));\nconst sideMargins = 20;\n\nfunction Project(props) {\n  _s();\n\n  var initialColor = '#EEE4BF';\n  var hoverColor = '#ede7ce';\n  const [isHovered, setHover] = React.useState(false);\n\n  let onHover = () => {\n    setHover(!isHovered);\n    console.log(\"hovering: \" + isHovered);\n  };\n\n  const classes = useStyles();\n  const grow = useSpring({\n    config: {\n      friction: 20,\n      tension: 500,\n      mass: 1\n    },\n    height: isHovered ? 250 : 245,\n    width: isHovered ? 250 : 245,\n    transform: isHovered ? \"rotate(3deg)\" : \"rotate(0deg)\",\n    backgroundColor: isHovered ? hoverColor : initialColor\n  });\n  const underline = useSpring({\n    config: {\n      friction: 20,\n      tension: 100\n    },\n    textDecoration: isHovered ? \"underline\" : \"none\",\n    color: isHovered ? \"#313036\" : \"#EEE4BF\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: classes.title,\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.card,\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Project, \"jhbtc129rck67g8ZZ4Q1L79EKmo=\", false, function () {\n  return [useStyles, useSpring, useSpring];\n});\n\n_c = Project;\nexport default Project;\n\nvar _c;\n\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"sources":["/Users/sam/Desktop/psite/src/components/Project.js"],"names":["React","makeStyles","animated","useSpring","cardWidth","cardHeight","useStyles","theme","card","marginLeft","sideMargins","marginRight","display","icon","marginTop","height","width","title","fontSize","textAlign","fontFamily","fontWeight","color","Project","props","initialColor","hoverColor","isHovered","setHover","useState","onHover","console","log","classes","grow","config","friction","tension","mass","transform","backgroundColor","underline","textDecoration","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,cAApC;AAGA,IAAIC,SAAS,GAAG,GAAhB;AACA,IAAIC,UAAU,GAAG,GAAjB;AAGA,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAEC,WADR;AAEJC,IAAAA,WAAW,EAAED,WAFT;AAGJE,IAAAA,OAAO,EAAE;AAHL,GADiC;AAMvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE,EADP;AAEJC,IAAAA,MAAM,EAAE,GAFJ;AAGJC,IAAAA,KAAK,EAAE;AAHH,GANiC;AAWvCC,EAAAA,KAAK,EAAE;AACLL,IAAAA,OAAO,EAAE,cADJ;AAELI,IAAAA,KAAK,EAAE,GAFF;AAGLE,IAAAA,QAAQ,EAAE,EAHL;AAILC,IAAAA,SAAS,EAAE,QAJN;AAKLL,IAAAA,SAAS,EAAE,CALN;AAMLM,IAAAA,UAAU,EAAE,YANP;AAOLC,IAAAA,UAAU,EAAE,GAPP;AAQLC,IAAAA,KAAK,EAAE;AARF;AAXgC,CAAZ,CAAD,CAA5B;AAuBA,MAAMZ,WAAW,GAAG,EAApB;;AAGA,SAASa,OAAT,CAAiBC,KAAjB,EAAuB;AAAA;;AAErB,MAAIC,YAAY,GAAG,SAAnB;AACA,MAAIC,UAAU,GAAG,SAAjB;AAGA,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwB5B,KAAK,CAAC6B,QAAN,CAAe,KAAf,CAA9B;;AAEA,MAAIC,OAAO,GAAG,MAAM;AAClBF,IAAAA,QAAQ,CAAC,CAACD,SAAF,CAAR;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAeL,SAA3B;AACD,GAHD;;AAKA,QAAMM,OAAO,GAAG3B,SAAS,EAAzB;AAGA,QAAM4B,IAAI,GAAG/B,SAAS,CAAC;AACrBgC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,OAAO,EAAE,GAAzB;AAA8BC,MAAAA,IAAI,EAAE;AAApC,KADa;AAErBvB,IAAAA,MAAM,EAAEY,SAAS,GAAG,GAAH,GAAS,GAFL;AAGrBX,IAAAA,KAAK,EAAEW,SAAS,GAAG,GAAH,GAAS,GAHJ;AAIrBY,IAAAA,SAAS,EAAEZ,SAAS,GAAG,cAAH,GAAoB,cAJnB;AAKrBa,IAAAA,eAAe,EAAEb,SAAS,GAAGD,UAAH,GAAgBD;AALrB,GAAD,CAAtB;AAQA,QAAMgB,SAAS,GAAGtC,SAAS,CAAC;AAC1BgC,IAAAA,MAAM,EAAE;AAACC,MAAAA,QAAQ,EAAE,EAAX;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KADkB;AAE1BK,IAAAA,cAAc,EAAEf,SAAS,GAAG,WAAH,GAAiB,MAFhB;AAG1BL,IAAAA,KAAK,EAAEK,SAAS,GAAG,SAAH,GAAe;AAHL,GAAD,CAA3B;AAMA,sBACE;AAAA,4BACE;AAAM,MAAA,SAAS,EAAEM,OAAO,CAAChB,KAAzB;AAAA,gBAAiCO,KAAK,CAACP;AAAvC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAEgB,OAAO,CAACzB,IAAxB;AAAA,gBACGgB,KAAK,CAACmB;AADT;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAvCQpB,O;UAaSjB,S,EAGHH,S,EAQKA,S;;;KAxBXoB,O;AAyCT,eAAeA,OAAf","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { animated, useSpring } from 'react-spring';\n\n\nvar cardWidth = 250;\nvar cardHeight = 250;\n\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    marginLeft: sideMargins, \n    marginRight: sideMargins, \n    display: 'inline-block'\n  },\n  icon: {\n    marginTop: 15,\n    height: 200,\n    width: 200,\n  },\n  title: {\n    display: 'inline-block',\n    width: 250,\n    fontSize: 24,\n    textAlign: 'center',\n    marginTop: 5,\n    fontFamily: 'Montserrat',\n    fontWeight: 800,\n    color: '#242331 !important',\n  }\n  \n}));\nconst sideMargins = 20;\n\n\nfunction Project(props){\n\n  var initialColor = '#EEE4BF';\n  var hoverColor = '#ede7ce';\n\n\n  const [isHovered, setHover] = React.useState(false);\n\n  let onHover = () => {\n    setHover(!isHovered)\n    console.log(\"hovering: \" + isHovered);\n  }\n\n  const classes = useStyles();\n\n\n  const grow = useSpring({\n    config: { friction: 20, tension: 500, mass: 1 },\n    height: isHovered ? 250 : 245,\n    width: isHovered ? 250 : 245,\n    transform: isHovered ? \"rotate(3deg)\" : \"rotate(0deg)\",\n    backgroundColor: isHovered ? hoverColor : initialColor,\n  });\n\n  const underline = useSpring({\n    config: {friction: 20, tension: 100},\n    textDecoration: isHovered ? \"underline\" : \"none\",\n    color: isHovered ? \"#313036\" : \"#EEE4BF\",\n  });\n\n  return(\n    <div>\n      <span className={classes.title}>{props.title}</span>\n      <div className={classes.card}>\n        {props.children}\n      </div>\n    </div>\n\n  )\n}\n\nexport default Project;\n\n"]},"metadata":{},"sourceType":"module"}