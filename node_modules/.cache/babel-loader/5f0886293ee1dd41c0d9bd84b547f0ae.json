{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sam/Desktop/psite/src/components/Accordion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport { useMeasure } from \"react-use\";\nimport style from \"../style/accordion.module.css\";\nimport { Card, Typography, Grid } from \"@material-ui/core\";\nimport DoubleChevron from \"../icons/DoubleChevrons.svg\";\n\nconst Accordion = props => {\n  _s();\n\n  const defaultHeight = \"150px\"; // Manages the open or cloased state of the accordion\n\n  const [open, toggle] = useState(false); // The height of the content inside of the accordion\n\n  const [contentHeight, setContentHeight] = useState(defaultHeight); // Gets the height of the element (ref)\n\n  const [ref, {\n    height\n  }] = useMeasure(); // Animations\n\n  const expand = useSpring({\n    config: {\n      friction: 10\n    },\n    height: open ? `${contentHeight}px` : defaultHeight\n  });\n  const spin = useSpring({\n    config: {\n      friction: 10\n    },\n    transform: open ? \"rotate(180deg)\" : \"rotate(0deg)\"\n  });\n  useEffect(() => {\n    //Sets initial height\n    setContentHeight(height); //Adds resize event listener\n\n    window.addEventListener(\"resize\", setContentHeight(height)); // Clean-up\n\n    return window.removeEventListener(\"resize\", setContentHeight(height));\n  }, [height]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(animated.div, {\n      className: style.accordion,\n      style: expand,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: 'row',\n        justify: \"flex-start\",\n        alignItems: \"flex-start\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 5,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            ref: ref,\n            className: style.content,\n            elevation: 0,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              style: {\n                fontWeight: 500,\n                width: 400\n              },\n              children: props.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              style: {\n                fontSize: 18,\n                width: 400\n              },\n              children: props.setting\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              style: {\n                fontSize: 18,\n                width: 400\n              },\n              children: props.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              style: {\n                overflow: 'hidden',\n                paddingBottom: 50,\n                paddingTop: 50,\n                fontSize: 18\n              },\n              children: props.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          sm: 7,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'right',\n              position: 'relative',\n              top: '50%',\n              transform: 'translateY(-50%)'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: props.image,\n              style: {\n                maxHeight: 75\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '52.1%'\n      },\n      children: /*#__PURE__*/_jsxDEV(animated.button, {\n        className: style.expand,\n        onClick: () => toggle(!open),\n        style: spin,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: DoubleChevron\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Accordion, \"OQaAccXekJWawpie6hcRcLBHNyM=\", false, function () {\n  return [useMeasure, useSpring, useSpring];\n});\n\n_c = Accordion;\nexport default Accordion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"sources":["/Users/sam/Desktop/psite/src/components/Accordion.js"],"names":["React","useState","useEffect","useSpring","animated","useMeasure","style","Card","Typography","Grid","Accordion","props","defaultHeight","open","toggle","contentHeight","setContentHeight","ref","height","expand","config","friction","spin","transform","window","addEventListener","removeEventListener","wrapper","accordion","content","fontWeight","width","title","fontSize","setting","date","overflow","paddingBottom","paddingTop","description","textAlign","position","top","image","maxHeight","DoubleChevron"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport { useMeasure } from \"react-use\";\nimport style from \"../style/accordion.module.css\";\nimport {Card, Typography, Grid} from \"@material-ui/core\";\nimport DoubleChevron from '../icons/DoubleChevrons.svg'\n\nconst Accordion = (props) => {\n  const defaultHeight = \"150px\";\n\n  // Manages the open or cloased state of the accordion\n  const [open, toggle] = useState(false);\n\n  // The height of the content inside of the accordion\n  const [contentHeight, setContentHeight] = useState(defaultHeight);\n\n  // Gets the height of the element (ref)\n  const [ref, { height }] = useMeasure();\n\n  // Animations\n  const expand = useSpring({\n    config: { friction: 10 },\n    height: open ? `${contentHeight}px` : defaultHeight\n  });\n  const spin = useSpring({\n    config: { friction: 10 },\n    transform: open ? \"rotate(180deg)\" : \"rotate(0deg)\"\n  });\n\n  useEffect(() => {\n    //Sets initial height\n    setContentHeight(height);\n\n    //Adds resize event listener\n    window.addEventListener(\"resize\", setContentHeight(height));\n\n    // Clean-up\n    return window.removeEventListener(\"resize\", setContentHeight(height));\n  }, [height]);\n\n  return (\n    <div className={style.wrapper}>\n\n      <animated.div className={style.accordion} style={expand}>\n      <Grid \n      container\n      direction={'row'}\n      justify=\"flex-start\"\n      alignItems=\"flex-start\">\n\n\n      <Grid item sm={5}>\n\n      <Card ref={ref} className={style.content} elevation={0}>\n        {/* <img src={props.image} style={{height: 100, float: 'right', paddingRight: 100, filter: 'saturation(300%)'}}/> */}\n\n        <Typography variant=\"h5\" style={{fontWeight: 500, width: 400}}>\n          {props.title}\n        </Typography> \n        \n        <Typography style={{fontSize: 18, width: 400}}>\n          {props.setting}\n        </Typography>\n        \n        <Typography style={{fontSize: 18, width: 400}}>\n          {props.date}\n        </Typography>\n\n        <Typography style={{overflow: 'hidden', paddingBottom: 50, paddingTop: 50, fontSize: 18}}>\n          {props.description}\n        </Typography>\n\n      </Card>\n\n      </Grid>\n      <Grid item xs={2} sm={7}>\n        <div style={{textAlign: 'right', position: 'relative', top: '50%', transform: 'translateY(-50%)'}}>\n          <img src={props.image} style={{maxHeight: 75}}/>\n        </div>\n      </Grid>\n\n      </Grid>    \n\n      </animated.div>\n\n\n      \n\n      <div style={{width: '52.1%'}}>\n        <animated.button\n          className={style.expand}\n          onClick={() => toggle(!open)}\n          style={spin}  >\n          <img src={DoubleChevron}/>\n        </animated.button>\n      </div>\n\n\n      \n\n    </div>\n  );\n};\n\nexport default Accordion;\n\n\n\n"]},"metadata":{},"sourceType":"module"}