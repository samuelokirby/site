{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sam/Desktop/psite/src/components/ProjectSquare.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles, fade } from '@material-ui/core';\nimport { animated, useSpring, useTransition } from 'react-spring';\nvar cardWidth = 250;\nvar cardHeight = 250;\nconst useStyles = makeStyles(theme => ({\n  card: {\n    backgroundColor: '#EEE4BF',\n    boxShadow: '0px 2px 6px #533E2D',\n    padding: 10,\n    width: cardWidth,\n    height: cardHeight,\n    marginRight: 50,\n    marginLeft: 50,\n    marginTop: 50,\n    borderRadius: 25\n  },\n  icon: {\n    marginTop: 15,\n    height: 200,\n    width: 200\n  },\n  title: {\n    display: 'inline-block',\n    verticalAlign: 'text-top',\n    textAlign: 'center',\n    position: 'relative',\n    top: '44%',\n    fontFamily: 'Montserrat',\n    fontWeight: 800,\n    fontSize: 36,\n    color: '#242331 !important',\n    opacity: '1'\n  },\n  paragraph: {\n    textAlign: 'left',\n    fontSize: 18\n  }\n}));\nconst sideMargins = 20;\n\nfunction ProjectSquare(props) {\n  _s();\n\n  var initialColor = '#EEE4BF';\n  var hoverColor = '#ede7ce';\n  const [isHovered, setHover] = React.useState(false);\n\n  let onHover = () => {\n    setHover(!isHovered);\n    console.log(\"hovering: \" + isHovered);\n  };\n\n  const classes = useStyles();\n  const grow = useSpring({\n    config: {\n      friction: 30,\n      mass: 1\n    },\n    height: isHovered ? 400 : 400,\n    width: isHovered ? 1050 : 690,\n    transform: isHovered ? \"rotate(0.2deg)\" : \"rotate(0deg)\",\n    backgroundColor: isHovered ? hoverColor : initialColor\n  });\n  let opacity = 0;\n  const fadeIn = useSpring({\n    config: {\n      mass: 2,\n      friction: 0\n    },\n    opacity: isHovered ? opacity : opacity = 1,\n    right: isHovered ? 1000 : 0,\n    from: {\n      opacity: opacity\n    }\n  });\n  const fadeOut = useSpring({\n    opacity: isHovered ? 1 : 0,\n    from: {\n      opacity: 0\n    }\n  });\n  const underline = useSpring({\n    config: {\n      friction: 20,\n      tension: 100\n    },\n    textDecoration: isHovered ? \"underline\" : \"none\",\n    color: isHovered ? \"#313036\" : \"#EEE4BF\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: sideMargins,\n      marginRight: sideMargins,\n      display: 'inline-block'\n    },\n    children: /*#__PURE__*/_jsxDEV(animated.div, {\n      className: classes.card,\n      onMouseEnter: onHover,\n      onMouseLeave: onHover,\n      style: grow,\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        className: classes.title,\n        style: fadeIn,\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ProjectSquare, \"lDbkcw5FF4sX/IGuED0VrW2u88A=\", false, function () {\n  return [useStyles, useSpring, useSpring, useSpring, useSpring];\n});\n\n_c = ProjectSquare;\nexport default ProjectSquare;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectSquare\");","map":{"version":3,"sources":["/Users/sam/Desktop/psite/src/components/ProjectSquare.js"],"names":["React","makeStyles","fade","animated","useSpring","useTransition","cardWidth","cardHeight","useStyles","theme","card","backgroundColor","boxShadow","padding","width","height","marginRight","marginLeft","marginTop","borderRadius","icon","title","display","verticalAlign","textAlign","position","top","fontFamily","fontWeight","fontSize","color","opacity","paragraph","sideMargins","ProjectSquare","props","initialColor","hoverColor","isHovered","setHover","useState","onHover","console","log","classes","grow","config","friction","mass","transform","fadeIn","right","from","fadeOut","underline","tension","textDecoration"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles, fade } from '@material-ui/core';\nimport { animated, useSpring, useTransition } from 'react-spring';\n\n\nvar cardWidth = 250;\nvar cardHeight = 250;\n\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    backgroundColor: '#EEE4BF',\n    boxShadow: '0px 2px 6px #533E2D',\n    padding: 10,\n    width: cardWidth,\n    height: cardHeight,\n    marginRight: 50,\n    marginLeft: 50,\n    marginTop: 50,\n    borderRadius: 25,\n  },\n  icon: {\n    marginTop: 15,\n    height: 200,\n    width: 200,\n  },\n  title: {\n    display: 'inline-block',\n    verticalAlign: 'text-top', \n    textAlign: 'center', \n    position: 'relative', \n    top: '44%', \n    fontFamily: 'Montserrat',\n    fontWeight: 800,\n    fontSize: 36,\n    color: '#242331 !important',\n    opacity: '1',\n  },\n  paragraph: {\n    textAlign: 'left',\n    fontSize: 18,\n  },\n}));\nconst sideMargins = 20;\n\n\nfunction ProjectSquare(props){\n\n  var initialColor = '#EEE4BF';\n  var hoverColor = '#ede7ce';\n\n\n  const [isHovered, setHover] = React.useState(false);\n\n  let onHover = () => {\n    setHover(!isHovered)\n    console.log(\"hovering: \" + isHovered);\n  }\n\n  const classes = useStyles();\n\n\n  const grow = useSpring({\n    config: { friction: 30, mass: 1 },\n    height: isHovered ? 400 : 400,\n    width: isHovered ? 1050 : 690,\n    transform: isHovered ? \"rotate(0.2deg)\" : \"rotate(0deg)\",\n    backgroundColor: isHovered ? hoverColor : initialColor,\n  });\n\n  let opacity = 0;\n\n  const fadeIn = useSpring({\n    config: {mass: 2, friction: 0},\n    opacity: isHovered ? opacity : opacity=1,\n    right: isHovered ? 1000 : 0,\n    from: { opacity: opacity },\n  })\n\n  const fadeOut = useSpring({\n    opacity: isHovered? 1 : 0,\n    from: { opacity: 0 },\n  })\n\n\n  const underline = useSpring({\n    config: {friction: 20, tension: 100},\n    textDecoration: isHovered ? \"underline\" : \"none\",\n    color: isHovered ? \"#313036\" : \"#EEE4BF\",\n  });\n\n  return(\n      <div style={{marginLeft: sideMargins, marginRight: sideMargins, display: 'inline-block'}}>\n        <animated.div className={classes.card} onMouseEnter={ onHover } onMouseLeave={ onHover }\n        style={grow}>\n          <animated.div className={classes.title} style={fadeIn}>\n            {props.title}\n            {/* <animated.span className={classes.paragraph} style={fadeOut}>\n              {props.children}\n            </animated.span> */}\n          </animated.div>\n\n        </animated.div>\n        {/* <animated.span className={classes.title} style={underline}>\n          {props.title}\n        </animated.span> */}\n      </div>\n  )\n}\n\nexport default ProjectSquare;\n\n"]},"metadata":{},"sourceType":"module"}