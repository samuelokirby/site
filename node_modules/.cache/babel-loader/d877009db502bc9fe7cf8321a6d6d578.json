{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sam/Desktop/psite/src/components/CollapseCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, Typography, Button, IconButton } from '@material-ui/core';\nimport { ChevronsDown } from 'react-feather';\nimport { useMeasure } from 'react-use';\nimport { useSpring, animated } from 'react-spring';\n\nconst CollapseCard = props => {\n  _s();\n\n  const defaultHeight = '50%';\n  const [open, toggle] = useState(false);\n  const [contentHeight, setContentHeight] = useState(defaultHeight);\n  const [ref, {\n    height\n  }] = useMeasure();\n  useEffect(() => {\n    //Sets initial height\n    setContentHeight(height); //Adds resize event listener\n\n    window.addEventListener(\"resize\", setContentHeight(height)); // Clean-up\n\n    return window.removeEventListener(\"resize\", setContentHeight(height));\n  }, [height]); // Animations\n\n  const expand = useSpring({\n    config: {\n      friction: 10\n    },\n    height: open ? `${contentHeight}px` : defaultHeight\n  });\n  const spin = useSpring({\n    config: {\n      friction: 10\n    },\n    width: '100%',\n    transform: open ? \"rotate(180deg)\" : \"rotate(0deg)\"\n  });\n  return /*#__PURE__*/_jsxDEV(animated.div, {\n    ref: ref,\n    style: {\n      margin: 'auto',\n      width: '80%',\n      paddingTop: 30\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: 650,\n        height: 205\n      },\n      flexDirection: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        style: {\n          fontWeight: 'bold'\n        },\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: props.setting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: props.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        style: {\n          overflow: 'hidden'\n        },\n        children: props.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(animated.span, {\n        style: {\n          width: '100%'\n        },\n        onClick: () => toggle(!open),\n        style: spin,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          children: /*#__PURE__*/_jsxDEV(ChevronsDown, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CollapseCard, \"1nAHa8BryPIl3gWsQqj5MMMObaA=\", false, function () {\n  return [useMeasure, useSpring, useSpring];\n});\n\n_c = CollapseCard;\nexport default CollapseCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CollapseCard\");","map":{"version":3,"sources":["/Users/sam/Desktop/psite/src/components/CollapseCard.js"],"names":["React","useState","useEffect","Card","Typography","Button","IconButton","ChevronsDown","useMeasure","useSpring","animated","CollapseCard","props","defaultHeight","open","toggle","contentHeight","setContentHeight","ref","height","window","addEventListener","removeEventListener","expand","config","friction","spin","width","transform","margin","paddingTop","fontWeight","title","setting","date","overflow","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, Typography, Button, IconButton } from '@material-ui/core';\nimport { ChevronsDown } from 'react-feather';\nimport { useMeasure } from 'react-use';\nimport { useSpring, animated } from 'react-spring';\n\n\n\nconst CollapseCard = (props) => {\n\n  const defaultHeight = '50%';\n\n  const [open, toggle] = useState(false);\n\n  const [contentHeight, setContentHeight] = useState(defaultHeight);\n\n  const [ref, { height }] = useMeasure();\n\n  useEffect(() => {\n    //Sets initial height\n    setContentHeight(height);\n  \n    //Adds resize event listener\n    window.addEventListener(\"resize\", setContentHeight(height));\n  \n    // Clean-up\n    return window.removeEventListener(\"resize\", setContentHeight(height));\n  }, [height]);\n\n\n  // Animations\n  const expand = useSpring({\n    config: { friction: 10 },\n    height: open ? `${contentHeight}px` : defaultHeight\n  });\n  const spin = useSpring({\n    config: { friction: 10 },\n    width: '100%',\n    transform: open ? \"rotate(180deg)\" : \"rotate(0deg)\"\n  });\n\n  return(\n    <animated.div ref={ref} style={{margin: 'auto', width: '80%', paddingTop: 30}}>\n      <Card style={{width: 650, height: 205}} flexDirection=\"row\">\n        <Typography variant=\"h5\" style={{fontWeight: 'bold'}}>\n          {props.title}\n        </Typography>\n        <Typography variant=\"h6\">\n          {props.setting}\n        </Typography>\n        <Typography variant=\"h6\">\n          {props.date}\n        </Typography>\n\n        <Typography variant=\"body1\" style={{overflow: 'hidden'}}>\n          {props.description}\n        </Typography>\n\n        <animated.span style={{width: '100%'}}\n        onClick={() => toggle(!open)}\n        style={spin}>\n          <Button>\n            <ChevronsDown/>\n          </Button>\n        </animated.span>\n\n      </Card>\n    </animated.div>\n  )\n\n}\n\nexport default CollapseCard"]},"metadata":{},"sourceType":"module"}