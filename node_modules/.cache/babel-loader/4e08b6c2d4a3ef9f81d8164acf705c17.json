{"ast":null,"code":"import _slicedToArray from\"/Users/sam/Desktop/psite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React from'react';import{makeStyles}from'@material-ui/core';import{animated,useSpring}from'react-spring';var cardWidth=250;var cardHeight=250;var useStyles=makeStyles(function(theme){return{card:{backgroundColor:'#EEE4BF',boxShadow:'0px 2px 6px #533E2D',padding:10,width:cardWidth,height:cardHeight,marginRight:50,marginLeft:50,marginTop:50,borderRadius:25},icon:{marginTop:15,height:200,width:200},title:{display:'inline-block',width:250,fontSize:24,textAlign:'center',marginTop:5,fontFamily:'Montserrat',fontWeight:800,color:'#242331 !important'}};});var sideMargins=20;function SocialSquare(props){var initialColor='#EEE4BF';var hoverColor='#ede7ce';var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),isHovered=_React$useState2[0],setHover=_React$useState2[1];var onHover=function onHover(){setHover(!isHovered);console.log(\"hovering: \"+isHovered);};var classes=useStyles();var grow=useSpring({config:{friction:20,tension:500,mass:1},height:isHovered?250:245,width:isHovered?250:245,transform:isHovered?\"rotate(3deg)\":\"rotate(0deg)\",backgroundColor:isHovered?hoverColor:initialColor});var underline=useSpring({config:{friction:20,tension:100},textDecoration:isHovered?\"underline\":\"none\",color:isHovered?\"#313036\":\"#EEE4BF\"});return/*#__PURE__*/_jsxs(\"div\",{style:{marginLeft:sideMargins,marginRight:sideMargins,display:'inline-block'},children:[/*#__PURE__*/_jsx(animated.div,{className:classes.card,onMouseEnter:onHover,onMouseLeave:onHover,style:grow,children:/*#__PURE__*/_jsx(\"div\",{style:{verticalAlign:'text-top',textAlign:'center',position:'relative',top:'50%',transform:'translateY(-50%)'},children:props.children})}),/*#__PURE__*/_jsx(animated.span,{className:classes.title,style:underline,children:props.title})]});}export default SocialSquare;","map":{"version":3,"sources":["/Users/sam/Desktop/psite/src/components/SocialSquare.js"],"names":["React","makeStyles","animated","useSpring","cardWidth","cardHeight","useStyles","theme","card","backgroundColor","boxShadow","padding","width","height","marginRight","marginLeft","marginTop","borderRadius","icon","title","display","fontSize","textAlign","fontFamily","fontWeight","color","sideMargins","SocialSquare","props","initialColor","hoverColor","useState","isHovered","setHover","onHover","console","log","classes","grow","config","friction","tension","mass","transform","underline","textDecoration","verticalAlign","position","top","children"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { animated, useSpring } from 'react-spring';\n\n\nvar cardWidth = 250;\nvar cardHeight = 250;\n\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    backgroundColor: '#EEE4BF',\n    boxShadow: '0px 2px 6px #533E2D',\n    padding: 10,\n    width: cardWidth,\n    height: cardHeight,\n    marginRight: 50,\n    marginLeft: 50,\n    marginTop: 50,\n    borderRadius: 25,\n  },\n  icon: {\n    marginTop: 15,\n    height: 200,\n    width: 200,\n  },\n  title: {\n    display: 'inline-block',\n    width: 250,\n    fontSize: 24,\n    textAlign: 'center',\n    marginTop: 5,\n    fontFamily: 'Montserrat',\n    fontWeight: 800,\n    color: '#242331 !important',\n  }\n}));\nconst sideMargins = 20;\n\n\nfunction SocialSquare(props){\n\n  var initialColor = '#EEE4BF';\n  var hoverColor = '#ede7ce';\n\n\n  const [isHovered, setHover] = React.useState(false);\n\n  let onHover = () => {\n    setHover(!isHovered)\n    console.log(\"hovering: \" + isHovered);\n  }\n\n  const classes = useStyles();\n\n\n  const grow = useSpring({\n    config: { friction: 20, tension: 500, mass: 1 },\n    height: isHovered ? 250 : 245,\n    width: isHovered ? 250 : 245,\n    transform: isHovered ? \"rotate(3deg)\" : \"rotate(0deg)\",\n    backgroundColor: isHovered ? hoverColor : initialColor,\n  });\n\n  const underline = useSpring({\n    config: {friction: 20, tension: 100},\n    textDecoration: isHovered ? \"underline\" : \"none\",\n    color: isHovered ? \"#313036\" : \"#EEE4BF\",\n  });\n\n  return(\n      <div style={{marginLeft: sideMargins, marginRight: sideMargins, display: 'inline-block'}}>\n        <animated.div className={classes.card} onMouseEnter={ onHover } onMouseLeave={ onHover }\n        style={grow}>\n          <div style={{verticalAlign: 'text-top', textAlign: 'center', position: 'relative', top: '50%', transform: 'translateY(-50%)'}}>\n            {props.children}\n          </div>\n        </animated.div>\n        <animated.span className={classes.title} style={underline}>\n          {props.title}\n        </animated.span>\n      </div>\n  )\n}\n\nexport default SocialSquare;\n\n"]},"metadata":{},"sourceType":"module"}