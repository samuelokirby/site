{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sam/Desktop/psite/src/components/CollapseCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, Typography, Button, IconButton } from '@material-ui/core';\nimport { useMeasure } from 'react-use';\nimport { useSpring, animated } from 'react-spring';\nimport DoubleChevronIcon from \"../icons/DoubleChevrons.svg\";\n\nconst CollapseCard = props => {\n  _s();\n\n  const defaultHeight = '650';\n  const [open, toggle] = useState(false);\n  const [contentHeight, setContentHeight] = useState(defaultHeight);\n  const [ref, {\n    height\n  }] = useMeasure();\n  useEffect(() => {\n    //Sets initial height\n    setContentHeight(height); //Adds resize event listener\n\n    window.addEventListener(\"resize\", setContentHeight(height)); // Clean-up\n\n    return window.removeEventListener(\"resize\", setContentHeight(height));\n  }, [height]); // Animations\n\n  const expand = useSpring({\n    config: {\n      friction: 10\n    },\n    height: open ? `${contentHeight}px` : defaultHeight\n  });\n  const spin = useSpring({\n    config: {\n      friction: 10\n    },\n    width: '100%',\n    transform: open ? \"rotate(180deg)\" : \"rotate(0deg)\"\n  });\n  return (\n    /*#__PURE__*/\n    // <animated.div ref={ref} style={{margin: 'auto', width: '80%', paddingTop: 30}}>\n    _jsxDEV(animated.div, {\n      ref: ref,\n      style: expand,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: 650,\n          height: 205\n        },\n        flexDirection: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          style: {\n            fontWeight: 'bold'\n          },\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: props.setting\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: props.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          style: {\n            overflow: 'hidden'\n          },\n          children: props.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              width: '100%'\n            },\n            disableRipple: true,\n            children: /*#__PURE__*/_jsxDEV(animated.div, {\n              onClick: () => toggle(!open),\n              style: spin,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: DoubleChevronIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(CollapseCard, \"1nAHa8BryPIl3gWsQqj5MMMObaA=\", false, function () {\n  return [useMeasure, useSpring, useSpring];\n});\n\n_c = CollapseCard;\nexport default CollapseCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CollapseCard\");","map":{"version":3,"sources":["/Users/sam/Desktop/psite/src/components/CollapseCard.js"],"names":["React","useState","useEffect","Card","Typography","Button","IconButton","useMeasure","useSpring","animated","CollapseCard","props","defaultHeight","open","toggle","contentHeight","setContentHeight","ref","height","window","addEventListener","removeEventListener","expand","config","friction","spin","width","transform","fontWeight","title","setting","date","overflow","description","DoubleChevronIcon"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, Typography, Button, IconButton } from '@material-ui/core';\nimport { useMeasure } from 'react-use';\nimport { useSpring, animated } from 'react-spring';\nimport DoubleChevronIcon from '../icons/DoubleChevrons.svg';\n\n\n\nconst CollapseCard = (props) => {\n\n  const defaultHeight = '650';\n  const [open, toggle] = useState(false);\n  const [contentHeight, setContentHeight] = useState(defaultHeight);\n  const [ref, { height }] = useMeasure();\n\n  useEffect(() => {\n    //Sets initial height\n    setContentHeight(height);\n  \n    //Adds resize event listener\n    window.addEventListener(\"resize\", setContentHeight(height));\n  \n    // Clean-up\n    return window.removeEventListener(\"resize\", setContentHeight(height));\n  }, [height]);\n\n\n  // Animations\n  const expand = useSpring({\n    config: { friction: 10 },\n    height: open ? `${contentHeight}px` : defaultHeight\n  });\n  const spin = useSpring({\n    config: { friction: 10 },\n    width: '100%',\n    transform: open ? \"rotate(180deg)\" : \"rotate(0deg)\"\n  });\n\n  return(\n    // <animated.div ref={ref} style={{margin: 'auto', width: '80%', paddingTop: 30}}>\n    <animated.div ref={ref} style={expand}>\n      <Card style={{width: 650, height: 205}} flexDirection=\"row\">\n        <Typography variant=\"h5\" style={{fontWeight: 'bold'}}>\n          {props.title}\n        </Typography>\n        <Typography variant=\"h6\">\n          {props.setting}\n        </Typography>\n        <Typography variant=\"h6\">\n          {props.date}\n        </Typography>\n\n        <Typography variant=\"body1\" style={{overflow: 'hidden'}}>\n          {props.description}\n        </Typography>\n\n        <div style={{width: '100%'}}>\n          <Button style={{width: '100%'}} disableRipple>\n            <animated.div\n            onClick={() => toggle(!open)}\n            style={spin}>\n              <img src={DoubleChevronIcon}/>\n            </animated.div>\n          </Button>\n        </div>\n\n      </Card>\n    </animated.div>\n  )\n\n}\n\nexport default CollapseCard"]},"metadata":{},"sourceType":"module"}