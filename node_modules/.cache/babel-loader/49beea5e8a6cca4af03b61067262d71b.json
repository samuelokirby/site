{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sam/Desktop/psite/src/pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Typography, Button, Container, makeStyles, Input } from '@material-ui/core';\nimport { Helmet } from 'react-helmet';\nimport $ from 'jquery';\nimport ChatBody from '../components/ChatBody';\nimport { useSpring, animated } from 'react-spring';\nconst useStyles = makeStyles(theme => ({\n  linkButton: {\n    marginTop: 10,\n    backgroundColor: '#005ECF',\n    color: '#fff',\n    fontWeight: 'bold',\n    textTransform: 'none',\n    width: '33%',\n    boxShadow: '0px 2px 2px lightgray'\n  },\n  icon: {\n    height: 200,\n    width: 200\n  },\n  leftMessage: {\n    padding: 5,\n    paddingLeft: 10,\n    paddingRight: 10,\n    borderRadius: 10,\n    marginTop: 5,\n    marginBottom: 5,\n    boxShadow: '2px 2px 5px lightgray',\n    display: 'inline-block',\n    clear: 'both',\n    float: 'left',\n    backgroundColor: '#03fc77',\n    maxWidth: 350,\n    wordBreak: 'break-word'\n  },\n  rightMessage: {\n    padding: 2,\n    paddingLeft: 10,\n    paddingRight: 10,\n    borderRadius: 10,\n    marginTop: 5,\n    marginBottom: 5,\n    boxShadow: '2px 2px 5px lightgray',\n    clear: 'both',\n    float: 'right',\n    backgroundColor: '#00c8ff',\n    maxWidth: 350,\n    wordBreak: 'break-word'\n  },\n  button: {\n    marginTop: 10,\n    marginLeft: 5,\n    marginRight: 5,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n      boxShadow: '0px 0px 0px gray'\n    },\n    backgroundColor: theme.palette.primary.main,\n    textTransform: 'none',\n    pointerEvents: 'none'\n  }\n}));\n\nfunction Home() {\n  _s();\n\n  var baseUrl = \"https://api.api.ai/v1/\";\n  var accessToken = \"d40a2e1786324a019851c794082aaaa1\";\n  const [history, updateHistory] = useState(['Sam-Bot: Welcome to my page! I am Sam-Bot, a chat bot designed by Sam to answer questions.']);\n  const [input, setInput] = useState(\"\");\n  const [load, setLoad] = useState(false);\n  useEffect(() => {\n    setLoad(true);\n  });\n  const introAnimation = useSpring({\n    config: {\n      friction: 20,\n      tension: 500,\n      mass: 1\n    },\n    fontSize: 48,\n    transform: load ? \"rotate(10deg)\" : \"rotate(10deg)\",\n    fontWeight: load ? 250 : 245\n  });\n\n  const send = query => {\n    setInput(\"\");\n    var text = query;\n    $.ajax({\n      type: \"POST\",\n      url: baseUrl + \"query?v=2180101\",\n      contentType: \"application/json; charset=utf-8\",\n      dataType: \"json\",\n      headers: {\n        \"Authorization\": \"Bearer \" + accessToken\n      },\n      data: JSON.stringify({\n        query: text,\n        lang: \"en\",\n        sessionId: \"sam\"\n      }),\n      success: function (data) {\n        var timeout = 0;\n\n        if ($.inArray(text, history)) {\n          timeout = 1000 * (Math.random() * 2 + 0.5);\n        }\n\n        updateHistory(oldArray => [...oldArray, text]);\n        setTimeout(setResponse, timeout, data.result.fulfillment.speech);\n      }\n    });\n  };\n\n  const setResponse = val => {\n    var botString = \"Sam-Bot: \";\n    var newString = botString + val;\n    newString = newString.replace(/\\s+/g, ' ').trim();\n    updateHistory(oldArray => [...oldArray, newString]); // $(\".chatBox\").append(\"\\n\" + newString + \"\\n\");\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    style: {\n      marginTop: 125,\n      marginBottom: 400\n    },\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"body\", {\n        style: \" background-image: url('../pbackground.png'); background-repeat: no-repeat; background-size: cover;\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(animated.span, {\n        variant: \"h3\",\n        style: introAnimation,\n        children: \"Sam Bot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatBody, {\n        children: history.map(function (item) {\n          console.log(item.substring(0, 9));\n\n          if (item.substring(0, 9) === 'Sam-Bot: ') {\n            // if Sam-Bot is sending the message\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.leftMessage,\n              children: item.substring(9, item.length)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.rightMessage,\n              children: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          width: 400\n        },\n        onKeyDown: event => {\n          if (event.key === 'Enter') {\n            send(input);\n          }\n        },\n        onChange: event => {\n          setInput(event.target.value);\n        },\n        value: input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"otcyEEB82KEtbQazqqajC1T2VK4=\", false, function () {\n  return [useSpring, useStyles];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/sam/Desktop/psite/src/pages/Home.js"],"names":["React","useState","useEffect","Typography","Button","Container","makeStyles","Input","Helmet","$","ChatBody","useSpring","animated","useStyles","theme","linkButton","marginTop","backgroundColor","color","fontWeight","textTransform","width","boxShadow","icon","height","leftMessage","padding","paddingLeft","paddingRight","borderRadius","marginBottom","display","clear","float","maxWidth","wordBreak","rightMessage","button","marginLeft","marginRight","palette","primary","main","pointerEvents","Home","baseUrl","accessToken","history","updateHistory","input","setInput","load","setLoad","introAnimation","config","friction","tension","mass","fontSize","transform","send","query","text","ajax","type","url","contentType","dataType","headers","data","JSON","stringify","lang","sessionId","success","timeout","inArray","Math","random","oldArray","setTimeout","setResponse","result","fulfillment","speech","val","botString","newString","replace","trim","classes","textAlign","map","item","console","log","substring","length","justifyContent","event","key","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Typography, Button, Container, makeStyles, Input } from '@material-ui/core';\nimport { Helmet } from 'react-helmet';\nimport $ from 'jquery';\nimport ChatBody from '../components/ChatBody';\nimport { useSpring, animated } from 'react-spring';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n  linkButton: {\n    marginTop: 10,\n    backgroundColor: '#005ECF',\n    color: '#fff',\n    fontWeight: 'bold',\n    textTransform: 'none',\n    width: '33%',\n    boxShadow: '0px 2px 2px lightgray',\n  },\n\n  icon: {\n    height: 200,\n    width: 200,\n  },\n\n  leftMessage: {\n    padding: 5,\n    paddingLeft: 10,\n    paddingRight: 10,\n    borderRadius: 10,\n    marginTop: 5,\n    marginBottom: 5,\n    boxShadow: '2px 2px 5px lightgray',\n    display: 'inline-block',\n    clear: 'both',\n    float: 'left',\n    backgroundColor: '#03fc77',\n    maxWidth: 350,\n    wordBreak: 'break-word',\n  },\n\n  rightMessage: {\n    padding: 2,\n    paddingLeft: 10,\n    paddingRight: 10,\n    borderRadius: 10,\n    marginTop: 5,\n    marginBottom: 5,\n    boxShadow: '2px 2px 5px lightgray',\n    clear: 'both',\n    float: 'right',\n    backgroundColor: '#00c8ff',\n    maxWidth: 350,\n    wordBreak: 'break-word',\n\n  },\n\n  button: {\n    marginTop: 10,\n    marginLeft: 5,\n    marginRight: 5,\n    '&:hover': {\n        backgroundColor: theme.palette.primary.main,\n        boxShadow: '0px 0px 0px gray',\n    },\n    backgroundColor: theme.palette.primary.main,\n    textTransform: 'none',\n    pointerEvents: 'none',\n  },\n\n}));\n\nfunction Home(){\n\n\n  var baseUrl = \"https://api.api.ai/v1/\";\n  var accessToken = \"d40a2e1786324a019851c794082aaaa1\";\n\n  const [history, updateHistory] = useState(['Sam-Bot: Welcome to my page! I am Sam-Bot, a chat bot designed by Sam to answer questions.']);\n  const [input, setInput] = useState(\"\");\n  const [load, setLoad] = useState(false);\n\n\n  useEffect(() => {\n    setLoad(true);\n  });\n\n\n  const introAnimation = useSpring({\n    config: { friction: 20, tension: 500, mass: 1 },\n    fontSize: 48,\n    transform: load ? \"rotate(10deg)\" : \"rotate(10deg)\",\n    fontWeight: load ? 250 : 245,\n  });\n  \n\n\n  const send = (query) => {\n    setInput(\"\");\n    var text = query;\n    $.ajax({\n      type: \"POST\",\n      url: baseUrl + \"query?v=2180101\",\n      contentType: \"application/json; charset=utf-8\",\n      dataType: \"json\",\n      headers: {\n        \"Authorization\": \"Bearer \" + accessToken\n      },\n      data: JSON.stringify({ query: text, lang: \"en\", sessionId: \"sam\" }),\n      success: function(data) {\n        var timeout = 0;\n        if($.inArray(text, history)){\n            timeout = 1000 * ((Math.random() * 2) + 0.5);\n        }\n        updateHistory(oldArray => [...oldArray, text]);\n        setTimeout(setResponse, timeout, data.result.fulfillment.speech);\n      }\n    });\n  }\n\n  const setResponse = (val) => {\n    var botString = \"Sam-Bot: \";\n    var newString = botString + val;\n    newString = newString.replace(/\\s+/g,' ').trim();\n    updateHistory(oldArray => [...oldArray, newString]);\n\n    // $(\".chatBox\").append(\"\\n\" + newString + \"\\n\");\n  }\n\n\n\n  const classes = useStyles();\n  return(\n\n\n    <Container maxWidth=\"lg\" style={{marginTop: 125, marginBottom: 400}}>\n\n\n    <Helmet>\n      <body style=\"\n      background-image: url('../pbackground.png');\n      background-repeat: no-repeat;\n      background-size: cover;\"\n      />\n    </Helmet>\n\n    <div style={{textAlign: 'center'}}>\n\n        <animated.span variant=\"h3\" style={introAnimation}>\n          Sam Bot\n        </animated.span>\n\n        \n\n        <ChatBody>\n          {history.map(function(item){\n            console.log(item.substring(0, 9));\n            if(item.substring(0, 9) === 'Sam-Bot: '){\n              // if Sam-Bot is sending the message\n              return(\n                <div className={classes.leftMessage}>\n                  {item.substring(9, item.length)}\n                </div>\n              )\n            }\n            else{\n              return(\n                <div className={classes.rightMessage}>\n                  {item}\n                </div>\n              )\n            }\n          })}\n        </ChatBody>\n      \n    </div>\n\n    <div style={{display: 'flex', justifyContent: 'center'}}>\n      <Input\n      style={{width: 400}}\n      onKeyDown={event=>{\n        if(event.key === 'Enter'){\n          send(input);\n        }\n      }}\n      onChange={event=>{\n        setInput(event.target.value);\n      }}\n      value={input}\n      \n      />\n      <Button>\n        Send\n      </Button>\n\n\n    </div>\n\n\n\n\n    </Container>\n\n  )\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}