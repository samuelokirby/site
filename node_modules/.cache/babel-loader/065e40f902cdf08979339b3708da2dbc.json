{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sam/Desktop/psite/src/components/Accordion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport { useMeasure } from \"react-use\";\nimport style from \"../style/accordion.module.css\";\nimport { Card, Typography, Grid, Button } from \"@material-ui/core\";\nimport DoubleChevron from \"../icons/DoubleChevrons.svg\";\n\nconst Accordion = props => {\n  _s();\n\n  const defaultHeight = \"150px\";\n  const defaultImageHeight = \"100px\"; // new height is 125px;\n  // Manages the open or cloased state of the accordion\n\n  const [open, toggle] = useState(false);\n\n  const onButtonClick = () => {\n    toggle(!open);\n  }; // The height of the content inside of the accordion\n\n\n  const [contentHeight, setContentHeight] = useState(defaultHeight); // Gets the height of the element (ref)\n\n  const [ref, {\n    height\n  }] = useMeasure(); // Animations\n\n  const expand = useSpring({\n    config: {\n      friction: 20\n    },\n    height: open ? `${contentHeight}px` : defaultHeight\n  });\n  const spin = useSpring({\n    config: {\n      friction: 10\n    },\n    transform: open ? \"rotate(180deg)\" : \"rotate(0deg)\"\n  });\n  const grow = useSpring({\n    config: {\n      friction: 20\n    },\n    height: open ? \"125px\" : \"100px\"\n  });\n  useEffect(() => {\n    //Sets initial height\n    setContentHeight(height); //Adds resize event listener\n\n    window.addEventListener(\"resize\", setContentHeight(height)); // Clean-up\n\n    return window.removeEventListener(\"resize\", setContentHeight(height));\n  }, [height]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(animated.div, {\n      className: style.accordion,\n      style: expand,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: 'row',\n        justify: \"flex-start\",\n        alignItems: \"flex-start\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            ref: ref,\n            className: style.content,\n            elevation: 0,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              style: {\n                fontWeight: 500,\n                width: 400\n              },\n              children: props.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              style: {\n                fontSize: 18,\n                width: 400\n              },\n              children: props.setting\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              style: {\n                fontSize: 18,\n                width: 400\n              },\n              children: props.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              style: {\n                overflow: 'hidden',\n                paddingBottom: 50,\n                paddingTop: 50,\n                fontSize: 18\n              },\n              children: props.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          sm: 7,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'right',\n              position: 'relative',\n              top: '50%',\n              transform: 'translateY(25%)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginRight: props.imageMargin\n              },\n              children: /*#__PURE__*/_jsxDEV(animated.img, {\n                src: props.image,\n                style: grow\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                children: \"hello\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                children: \"hello\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                children: \"hello\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '52.1%'\n      },\n      children: /*#__PURE__*/_jsxDEV(animated.button, {\n        className: style.expand,\n        onClick: onButtonClick,\n        style: spin,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: DoubleChevron\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Accordion, \"2QjzWIscQtgTN+Uwk2X563xCk4U=\", false, function () {\n  return [useMeasure, useSpring, useSpring, useSpring];\n});\n\n_c = Accordion;\nexport default Accordion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"sources":["/Users/sam/Desktop/psite/src/components/Accordion.js"],"names":["React","useState","useEffect","useSpring","animated","useMeasure","style","Card","Typography","Grid","Button","Accordion","props","defaultHeight","defaultImageHeight","open","toggle","onButtonClick","contentHeight","setContentHeight","ref","height","expand","config","friction","spin","transform","grow","window","addEventListener","removeEventListener","wrapper","accordion","content","fontWeight","width","title","fontSize","setting","date","overflow","paddingBottom","paddingTop","description","textAlign","position","top","marginRight","imageMargin","image","display","justifyContent","DoubleChevron"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport { useMeasure } from \"react-use\";\nimport style from \"../style/accordion.module.css\";\nimport {Card, Typography, Grid, Button} from \"@material-ui/core\";\nimport DoubleChevron from '../icons/DoubleChevrons.svg'\n\nconst Accordion = (props) => {\n  const defaultHeight = \"150px\";\n\n  const defaultImageHeight = \"100px\";\n  // new height is 125px;\n\n  // Manages the open or cloased state of the accordion\n  const [open, toggle] = useState(false);\n\n  const onButtonClick = () => {\n    toggle(!open);\n  }\n\n  // The height of the content inside of the accordion\n  const [contentHeight, setContentHeight] = useState(defaultHeight);\n\n  // Gets the height of the element (ref)\n  const [ref, { height }] = useMeasure();\n\n  // Animations\n  const expand = useSpring({\n    config: { friction: 20 },\n    height: open ? `${contentHeight}px` : defaultHeight\n  });\n  const spin = useSpring({\n    config: { friction: 10 },\n    transform: open ? \"rotate(180deg)\" : \"rotate(0deg)\"\n  });\n  const grow = useSpring({\n    config: { friction: 20 },\n    height: open ? \"125px\" : \"100px\"\n  })\n\n  useEffect(() => {\n    //Sets initial height\n    setContentHeight(height);\n\n    //Adds resize event listener\n    window.addEventListener(\"resize\", setContentHeight(height));\n\n    // Clean-up\n    return window.removeEventListener(\"resize\", setContentHeight(height));\n  }, [height]);\n\n  return (\n    <div className={style.wrapper}>\n\n      <animated.div className={style.accordion} style={expand}>\n      <Grid \n      container\n      direction={'row'}\n      justify=\"flex-start\"\n      alignItems=\"flex-start\">\n\n\n      <Grid item sm={6}>\n\n      <Card ref={ref} className={style.content} elevation={0}>\n        {/* <img src={props.image} style={{height: 100, float: 'right', paddingRight: 100, filter: 'saturation(300%)'}}/> */}\n\n        <Typography variant=\"h5\" style={{fontWeight: 500, width: 400}}>\n          {props.title}\n        </Typography> \n        \n        <Typography style={{fontSize: 18, width: 400}}>\n          {props.setting}\n        </Typography>\n        \n        <Typography style={{fontSize: 18, width: 400}}>\n          {props.date}\n        </Typography>\n\n        <Typography style={{overflow: 'hidden', paddingBottom: 50, paddingTop: 50, fontSize: 18}}>\n          {props.description}\n        </Typography>\n        \n\n      </Card>\n\n      </Grid>\n      <Grid item xs={2} sm={7}>\n        <div style={{textAlign: 'right', position: 'relative', top: '50%', transform: 'translateY(25%)'}}>\n          <span style={{marginRight: props.imageMargin}}>\n            <animated.img src={props.image} style={grow}/>\n          </span>\n          <div style={{display: 'flex', justifyContent: 'center'}}>\n\n            <Button>hello</Button>\n            <Button>hello</Button>\n            <Button>hello</Button>\n\n          </div>\n        </div>\n      </Grid>\n\n      </Grid>    \n\n\n      </animated.div>\n\n\n      \n\n      <div style={{width: '52.1%'}}>\n        <animated.button\n          className={style.expand}\n          onClick={onButtonClick}\n          style={spin}>\n          <img src={DoubleChevron}/>\n        </animated.button>\n      </div>\n\n\n      \n\n    </div>\n  );\n};\n\nexport default Accordion;\n\n\n\n"]},"metadata":{},"sourceType":"module"}